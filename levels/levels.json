{
    "last_finished_level": 2,
    "level_p": [
        [
            30,
            30,
            1,
            80,
            false
        ],
        [
            130,
            30,
            2,
            80,
            false
        ],
        [
            230,
            30,
            3,
            80,
            false
        ],
        [
            330,
            30,
            4,
            80,
            false
        ],
        [
            430,
            30,
            5,
            80,
            false
        ],
        [
            530,
            30,
            6,
            80,
            false
        ],
        [
            630,
            30,
            7,
            80,
            false
        ],
        [
            730,
            30,
            8,
            80,
            false
        ],
        [
            830,
            30,
            9,
            80,
            false
        ],
        [
            930,
            30,
            10,
            80,
            false
        ],
        [
            1030,
            30,
            11,
            80,
            false
        ],
        [
            1130,
            30,
            12,
            80,
            false
        ],
        [
            30,
            140,
            13,
            80,
            false
        ],
        [
            130,
            140,
            14,
            80,
            false
        ],
        [
            230,
            140,
            15,
            80,
            false
        ],
        [
            330,
            140,
            16,
            80,
            false
        ],
        [
            430,
            140,
            17,
            80,
            false
        ],
        [
            530,
            140,
            18,
            80,
            false
        ],
        [
            630,
            140,
            19,
            80,
            false
        ],
        [
            730,
            140,
            20,
            80,
            false
        ],
        [
            830,
            140,
            21,
            80,
            false
        ],
        [
            930,
            140,
            22,
            80,
            false
        ],
        [
            1030,
            140,
            23,
            80,
            false
        ],
        [
            1130,
            140,
            24,
            80,
            false
        ],
        [
            30,
            300,
            25,
            80,
            false
        ],
        [
            130,
            300,
            26,
            80,
            false
        ],
        [
            230,
            300,
            27,
            80,
            false
        ],
        [
            330,
            300,
            28,
            80,
            false
        ],
        [
            430,
            300,
            29,
            80,
            false
        ],
        [
            530,
            300,
            30,
            80,
            false
        ],
        [
            630,
            300,
            31,
            80,
            false
        ],
        [
            730,
            300,
            32,
            80,
            false
        ],
        [
            830,
            300,
            33,
            80,
            false
        ],
        [
            930,
            300,
            34,
            80,
            false
        ],
        [
            1030,
            300,
            35,
            80,
            false
        ],
        [
            1130,
            300,
            36,
            80,
            false
        ],
        [
            -1,
            -1,
            -1,
            80,
            false
        ]
    ],
    "level1": [
        {
            "input_text_Python": "",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "print",
                        "(",
                        "\"Hello, World!\"",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "printf",
                        "(",
                        "\"Hello, World!\"",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "\"Hello, World!\"",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Welcome to Code_Craft",
                    "",
                    "",
                    "This game is developed by Antonio -",
                    "NEX",
                    "",
                    "",
                    "In this game you can learn basics of",
                    "programing in a Minecraft-like",
                    "enviroment",
                    "",
                    "",
                    "Let's start!"
                ],
                [
                    "Level 1.",
                    "",
                    "First, let's learn something about",
                    "Python.",
                    "Python was created by Gudio van",
                    "Rossum, and released in 1991. Python",
                    "is now used almost everywhere.",
                    "Python uses new lines to complete a",
                    "command.",
                    "Scopes of loops, functions and",
                    "classes are defined by whitespaces.",
                    "Python is an interpreted language",
                    "which means that it is executed line",
                    "by line by a program called",
                    "interpreter."
                ],
                [
                    "Let's learn how to output something",
                    "on screen.",
                    "",
                    "In Python we use: \"print()\" function",
                    "for that. We just need to type in the",
                    "function and pass it a text surrounded",
                    "with quotes (in Python it doesn't matter",
                    "if they are single or double but in this",
                    "game we will stick with double quotes)",
                    "",
                    "print(\"Code_Craft\")",
                    "Code above will output Code_Craft on",
                    "screen"
                ],
                [
                    "Try to output:",
                    "",
                    "Hello, World!",
                    "",
                    "To close/open this book use:",
                    "Ctrl+E",
                    "Run your code with button at the",
                    "bottom of the screen",
                    "Delete output log with:",
                    "Ctrl+K"
                ]
            ],
            "text_C": [
                [
                    "Welcome to Code_Craft",
                    "",
                    "",
                    "This game is developed by Antonio -",
                    "NEX",
                    "",
                    "",
                    "In this game, you can learn basics of",
                    "programming in a Minecraft-like",
                    "environment",
                    "",
                    "",
                    "Let's start!"
                ],
                [
                    "Level 1.",
                    "",
                    "First, let's learn something about",
                    "C.",
                    "C was created by Dennis Ritchie in",
                    "1972 at Bell Labs. It is a powerful",
                    "language, widely used for system",
                    "programming, embedded systems, etc.",
                    "C uses semicolons to end statements.",
                    "Braces {} are used to define the scope",
                    "of functions, loops, and conditionals.",
                    "C is a compiled language, meaning it is",
                    "converted to machine code and",
                    "executed by the system directly."
                ],
                [
                    "Let's learn how to output something",
                    "on screen.",
                    "",
                    "In C, we use: \"printf()\" function",
                    "for that. We need to include the",
                    "\"stdio.h\" library to use it. Then type",
                    "the function and pass it a text",
                    "surrounded with double quotes.",
                    "",
                    "#include <stdio.h>",
                    "int main() {",
                    "    printf(\"Code_Craft\");",
                    "    return 0;",
                    "}",
                    "Code above will output Code_Craft on",
                    "screen"
                ],
                [
                    "Try to output:",
                    "",
                    "Hello, World!",
                    "",
                    "To close/open this book use:",
                    "Ctrl+E",
                    "Run your code with button at the",
                    "bottom of the screen",
                    "Delete output log with:",
                    "Ctrl+K"
                ]
            ],
            "text_C++": [
                [
                    "Welcome to Code_Craft",
                    "",
                    "",
                    "This game is developed by Antonio -",
                    "NEX",
                    "",
                    "",
                    "In this game, you can learn basics of",
                    "programming in a Minecraft-like",
                    "environment",
                    "",
                    "",
                    "Let's start!"
                ],
                [
                    "Level 1.",
                    "",
                    "First, let's learn something about",
                    "C++.",
                    "C++ was created by Bjarne Stroustrup",
                    "in 1983 as an extension of C. C++ is",
                    "widely used for game development,",
                    "high-performance applications, and",
                    "system software.",
                    "C++ uses semicolons to end statements.",
                    "Braces {} are used to define the scope",
                    "of functions, loops, and conditionals.",
                    "C++ is a compiled language, converted",
                    "to machine code and executed directly",
                    "by the system."
                ],
                [
                    "Let's learn how to output something",
                    "on screen.",
                    "",
                    "In C++, we use: \"cout\" for that. We",
                    "need to include the \"iostream\" library",
                    "to use it. Then type the object and pass",
                    "it text using the insertion operator `<<`",
                    "",
                    "#include <iostream>",
                    "using namespace std;",
                    "int main() {",
                    "    cout << \"Code_Craft\";",
                    "    return 0;",
                    "}",
                    "Code above will output Code_Craft on",
                    "screen"
                ],
                [
                    "Try to output:",
                    "",
                    "Hello, World!",
                    "",
                    "To close/open this book use:",
                    "Ctrl+E",
                    "Run your code with button at the",
                    "bottom of the screen",
                    "Delete output log with:",
                    "Ctrl+K"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Use print() function",
            "hint2_Python": "Inside of print() type \"Hello, World!\"",
            "hint1_C": "Use printf() function",
            "hint2_C": "Inside of printf() type \"Hello, World!\"",
            "hint1_C++": "Use cout function",
            "hint2_C++": "After it type << and \"Hello, World!\"",
            "pages": 4,
            "blocks": [
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "steve_front.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level2": [
        {
            "input_text_Python": "print(\"Steve\")",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    printf(\"Steve\");\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n    cout << \"Steve\";\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "#",
                        "print",
                        "(",
                        "\"Steve\"",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "/",
                        "/",
                        "printf",
                        "(",
                        "\"Steve\"",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "/",
                        "/",
                        "cout",
                        "<",
                        "<",
                        "\"Steve\"",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 2.",
                    "",
                    "In this level we will talk about",
                    "comments in code",
                    "",
                    "Comments are used to explain code,",
                    "make it more readable or prevent",
                    "the code from executing.",
                    "   #this is a comment",
                    "   print(\"Hello, World!\"",
                    "Comments can also be placed at the",
                    "end of a line.",
                    "   print(\"Hello, World!\") #comment",
                    "Or they can be used to prevent the",
                    "code from executing.",
                    "   #print(\"Hello, World!\")"
                ],
                [
                    "Try to prevent print(\"Steve\") from",
                    "executing by making it a comment"
                ]
            ],
            "text_C": [
                [
                    "Level 2.",
                    "",
                    "In this level, we will talk about",
                    "comments in code",
                    "",
                    "Comments are used to explain code,",
                    "make it more readable, or prevent",
                    "the code from executing.",
                    "   // This is a single-line comment",
                    "   printf(\"Hello, World!\");",
                    "Comments can also be placed at the",
                    "end of a line.",
                    "   printf(\"Hello, World!\"); // comment",
                    "Or you can use block comments to",
                    "comment out multiple lines of code.",
                    "   /* This is a block comment",
                    "      printf(\"Hello, World!\"); */"
                ],
                [
                    "Try to prevent printf(\"Steve\"); from",
                    "executing by making it a",
                    "single-line comment."
                ]
            ],
            "text_C++": [
                [
                    "Level 2.",
                    "",
                    "In this level, we will talk about",
                    "comments in code",
                    "",
                    "Comments are used to explain code,",
                    "make it more readable, or prevent",
                    "the code from executing.",
                    "   // This is a single-line comment",
                    "   cout << \"Hello, World!\";",
                    "Comments can also be placed at the",
                    "end of a line.",
                    "   cout << \"Hello, World!\"; // comment",
                    "Or you can use block comments to",
                    "comment out multiple lines of code.",
                    "   /* This is a block comment",
                    "      cout << \"Hello, World!\"; */"
                ],
                [
                    "Try to prevent cout << \"Steve\";",
                    "from executing by making it a",
                    "single-line comment."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "#",
            "hint2_Python": "Type # before print(\"Steve\")",
            "hint1_C": "//",
            "hint2_C": "Type // before printf(\"Steve\");",
            "hint1_C++": "//",
            "hint2_C++": "Type // before cout << \"Steve\";",
            "pages": 2,
            "blocks": [
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level3": [
        {
            "input_text_Python": "",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "b",
                        "=",
                        "3"
                    ],
                    [
                        "print",
                        "(",
                        "b",
                        ")"
                    ],
                    [
                        "a",
                        "=",
                        "4",
                        ".",
                        "5"
                    ],
                    [
                        "print",
                        "(",
                        "a",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "int",
                        "b",
                        "=",
                        "3",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"%d\"",
                        "b",
                        ")",
                        ";"
                    ],
                    [
                        "float",
                        "a",
                        "=",
                        "4",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"\\n%f\"",
                        "a",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "int",
                        "b",
                        "=",
                        "3",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "b",
                        ";"
                    ],
                    [
                        "float",
                        "a",
                        "=",
                        "4",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "endl",
                        "<",
                        "<",
                        "a",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 3.",
                    "",
                    "In this level we will learn about",
                    "variables.",
                    "",
                    "Variables are used to store data of",
                    "various data types",
                    "",
                    "In Python variable is created when you",
                    "assign it a value for the first time",
                    "",
                    "A variable name must start with a",
                    "letter or the underscore character, it",
                    "cannot start with a number, it can only",
                    "contain alpha-numeric characters and",
                    "underscores, variable names are"
                ],
                [
                    "case-sensitive and variable name",
                    "cannot be any of the Python keywords.",
                    "Main data types in Python are int, float",
                    "str and bool.",
                    "a = 5",
                    "b = 5.5",
                    "c = \"Nether\"",
                    "d = True",
                    "",
                    "Above are examples of variables of",
                    "various data types.",
                    "",
                    "To output a variable we use print().",
                    "",
                    "print(a) will output 5 on the screen."
                ],
                [
                    "a = 6.25 will change a from 5 to 6.25",
                    "",
                    "Try to make variable b, assign 3 to it",
                    "and print it, after that make variable a",
                    "with value 4.5 and print it in new line."
                ]
            ],
            "text_C": [
                [
                    "Level 3.",
                    "",
                    "In this level, we will learn about",
                    "variables.",
                    "",
                    "Variables are used to store data of",
                    "various data types.",
                    "",
                    "In C, a variable must be declared",
                    "before it can be used.",
                    "",
                    "A variable name must start with a",
                    "letter or an underscore character, it",
                    "cannot start with a number, it can only",
                    "contain alphanumeric characters and",
                    "underscores, variable names are"
                ],
                [
                    "case-sensitive and cannot be any of",
                    "the C keywords.",
                    "Main data types in C are int, float,",
                    "double and char",
                    "int a = 5;",
                    "float b = 5.5;",
                    "double c = 5.5;",
                    "char d = 'N';",
                    "",
                    "Above are examples of variables of",
                    "various data types.",
                    "",
                    "To output a variable, we use printf().",
                    "",
                    "printf(\"%d\", a); will output 5 on the",
                    "screen."
                ],
                [
                    "%d in printf tells it what is the data type",
                    "of given variable (%d - int, %f - float)",
                    "and where in the output you want it to",
                    "be, but we will talk more about that",
                    "later.",
                    "",
                    "a = 6; // will change a to 6",
                    "",
                    "Try to make variable b, assign 3 to it",
                    "and print it, after that make variable a",
                    "with value 4.5 and print it in new line."
                ]
            ],
            "text_C++": [
                [
                    "Level 3.",
                    "",
                    "In this level, we will learn about",
                    "variables.",
                    "",
                    "Variables are used to store data of",
                    "various data types.",
                    "",
                    "In C++, a variable must be declared",
                    "before it can be used.",
                    "",
                    "A variable name must start with a",
                    "letter or an underscore character, it",
                    "cannot start with a number, it can only",
                    "contain alphanumeric characters and",
                    "underscores, variable names are"
                ],
                [
                    "case-sensitive and cannot be any of",
                    "the C++ keywords.",
                    "Main data types in C++ are int, float,",
                    "double, string, and bool.",
                    "int a = 5;",
                    "float b = 5.5;",
                    "double c = 6.25;",
                    "string d = \"Nether\";",
                    "bool e = true;",
                    "",
                    "Above are examples of variables of",
                    "various data types.",
                    "",
                    "To output a variable, we use cout.",
                    "",
                    "cout << a; will output 5 on the screen."
                ],
                [
                    "a = 6; // will change a to 6",
                    "",
                    "Try to make variable b, assign 3 to it",
                    "and print it, after that make variable a",
                    "with value 4.5 and print it in new line."
                ]
            ],
            "hint1_unlocked": true,
            "hint2_unlocked": true,
            "hint1_Python": "variable = value",
            "hint2_Python": "print(variable)",
            "hint1_C": "b is int and a is float - data_type var = value;",
            "hint2_C": "Use \\n in printf() to go to new line",
            "hint1_C++": "b is int and a is float - data_type var = value;",
            "hint2_C++": "Use << endl in cout to go to new line",
            "pages": 3,
            "blocks": [
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "oak_log_top.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level4": [
        {
            "input_text_Python": "",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n    return 0;\n}",
            "solution_Python": [
                []
            ],
            "solution_C": [
                []
            ],
            "solution_C++": [
                []
            ],
            "text_Python": [
                [
                    "Level 4.",
                    "",
                    "In last level we explained what are",
                    "variables and said that they can be",
                    "of various data types",
                    "",
                    "In these level we will explain those data",
                    "types"
                ],
                [
                    "Integer - int",
                    "Integer is a positivie or negative whole",
                    "number. In Python there is no limit for",
                    "how long int value can be",
                    "a = 550",
                    "",
                    "Float - float",
                    "Float is a real number with",
                    "floating-point representation",
                    "a = 4.598"
                ],
                [
                    "String - str",
                    "String is a textual data type, it can",
                    "store one or more characters, letters",
                    "or numbers. It is made by putting text",
                    "inside of quotes.",
                    "a = \"Code_Craft 123\"",
                    "Instead of \" \", in Python we can also",
                    "use ' ' to create a string. In this game,",
                    "we will always use double quotes for",
                    "strings!",
                    "",
                    "Boolean - bool",
                    "Boolean is a value that represents",
                    "logical 0 or 1 / True or False",
                    "a = True, b = False"
                ],
                [
                    "Try to make a variable from each",
                    "data type we have covered."
                ]
            ],
            "text_C": [
                [
                    "Level 4.",
                    "",
                    "In the last level, we explained what",
                    "variables are and mentioned that they",
                    "can be of various data types.",
                    "",
                    "In this level, we will explain those",
                    "data types."
                ],
                [
                    "Integer - int",
                    "An integer is a positive or negative",
                    "whole number. In C, integers have",
                    "a limit based on memory size, typically",
                    "32-bits for int.",
                    "int a = 550;",
                    "",
                    "Float - float",
                    "A float is a real number with",
                    "floating-point representation, with",
                    "lower precision than double.",
                    "float b = 4.598;"
                ],
                [
                    "Double - double",
                    "A double is a real number with more",
                    "precision than float, often 64-bits.",
                    "double c = 3.14159;",
                    "",
                    "Character - char",
                    "A character stores a single letter or",
                    "symbol, enclosed in single quotes.",
                    "char d = 'C';",
                    "",
                    "String - char[]",
                    "A string in C is an array of characters",
                    "and is enclosed in double quotes.",
                    "Each character array ends with a",
                    "null terminator '\\0' to mark the end.",
                    "char str[] = \"Code_Craft 123\";"
                ],
                [
                    "Try to make a variable of each",
                    "data type we have covered and",
                    "print their values."
                ]
            ],
            "text_C++": [
                [
                    "Level 4.",
                    "",
                    "In the last level, we explained what",
                    "variables are and mentioned that they",
                    "can be of various data types.",
                    "",
                    "In this level, we will explain those",
                    "data types."
                ],
                [
                    "Integer - int",
                    "An integer is a positive or negative",
                    "whole number. In C++, integers have",
                    "a limit based on memory size, typically",
                    "32-bits for int.",
                    "int a = 550;",
                    "",
                    "Float - float",
                    "A float is a real number with",
                    "floating-point representation, with",
                    "lower precision than double.",
                    "float b = 4.598;"
                ],
                [
                    "Double - double",
                    "A double is a real number with more",
                    "precision than float, often 64-bits.",
                    "double c = 3.14159;",
                    "",
                    "String - string",
                    "A string is a collection of characters,",
                    "created using double quotes.",
                    "To use strings in C++, you need to",
                    "include the <string> header file.",
                    "In this game, this will already be",
                    "set up for you.",
                    "string d = \"Code_Craft 123\";"
                ],
                [
                    "Character - char",
                    "A character stores a single letter or",
                    "symbol, enclosed in single quotes.",
                    "char d = 'C';",
                    "",
                    "Boolean - bool",
                    "A boolean represents a logical value",
                    "of true or false.",
                    "bool e = true;",
                    "",
                    "Try to make a variable of each",
                    "data type we have covered and",
                    "print their values."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "bool, int, str, float",
            "hint2_Python": "variable = value",
            "hint1_C": "int, float, double, char, char[]",
            "hint2_C": "data_type variable = value;",
            "hint1_C++": "int, float, double, string, char, bool",
            "hint2_C++": "data_type variable = value;",
            "pages": 4,
            "blocks": [
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "dirt.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "grass_top.png",
                    "grass_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level5": [
        {
            "input_text_Python": "",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "name",
                        "=",
                        "\"Steve\""
                    ],
                    [
                        "age",
                        "=",
                        "25"
                    ],
                    [
                        "print",
                        "(",
                        "name",
                        "age",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "char",
                        "name",
                        "[",
                        "]",
                        "=",
                        "\"Steve\"",
                        ";"
                    ],
                    [
                        "int",
                        "age",
                        "=",
                        "25",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"%s %d\\n\"",
                        "name",
                        "age",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "#",
                        "include",
                        "<",
                        "string",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "string",
                        "name",
                        "=",
                        "\"Steve\"",
                        ";"
                    ],
                    [
                        "int",
                        "age",
                        "=",
                        "25",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "name",
                        "<",
                        "<",
                        "\" \"",
                        "<",
                        "<",
                        "age",
                        "<",
                        "<",
                        "endl",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 5.",
                    "",
                    "We have learned about variable data",
                    "types and now we will learn more",
                    "about how to output variables"
                ],
                [
                    "To output variables we use print()",
                    "function.",
                    "",
                    "x = \"Code_Craft\"",
                    "print(x)"
                ],
                [
                    "If we want to output more variables",
                    "we can separate them by comma.",
                    "",
                    "x = \"We\"",
                    "y = \"love\"",
                    "z = \"Code_Craft\"",
                    "print(x, y, z)",
                    "",
                    "output: We love Code_Craft",
                    "",
                    "Make two variables name and age,",
                    "assign \"Steve\" to name and 25 to",
                    "age and print both of them with one",
                    "print() function with a space between",
                    "them."
                ]
            ],
            "text_C": [
                [
                    "Level 5.",
                    "",
                    "We have learned about variable data",
                    "types, and now we will learn more",
                    "about how to output variables."
                ],
                [
                    "In C, we use the printf() function to",
                    "output variables.",
                    "",
                    "char x[] = \"Code_Craft\";",
                    "printf(\"%s\\n\", x);",
                    "",
                    "The % symbol is a format specifier",
                    "that tells printf() what type of",
                    "data to expect.",
                    "",
                    "%d -> int",
                    "%f -> float",
                    "%c -> char",
                    "%s -> string"
                ],
                [
                    "To output more variables, we can use",
                    "the printf() function with format",
                    "specifiers.",
                    "",
                    "char a[] = \"We\";",
                    "char b[] = \"love\";",
                    "char c[] = \"Code_Craft\";",
                    "printf(\"%s %s %s\\n\", a, b, c);",
                    "",
                    "Output: We love Code_Craft",
                    "",
                    "Make two variables name and age,",
                    "assign \"Steve\" to name and 25 to",
                    "age and print both of them with one",
                    "printf() function with a space between",
                    "them and new line after them."
                ]
            ],
            "text_C++": [
                [
                    "Level 5.",
                    "",
                    "We have learned about variable data",
                    "types, and now we will learn more",
                    "about how to output variables."
                ],
                [
                    "In C++, we use the cout object",
                    "from the iostream library to output",
                    "variables.",
                    "",
                    "string x = \"Code_Craft\";",
                    "cout << x << endl;"
                ],
                [
                    "If we want to output more variables,",
                    "we can use the cout object with the",
                    "insertion operator (<<).",
                    "",
                    "string a = \"We\";",
                    "string b = \"love\";",
                    "string c = \"Code_Craft\";",
                    "cout << a << ' ' << b << ' ' << c << endl;",
                    "",
                    "Output: We love Code_Craft",
                    "",
                    "Make two variables name and age,",
                    "assign \"Steve\" to name and 25 to",
                    "age and print both of them with one",
                    "cout object with a space between",
                    "them and new line after them."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Separate name and age with ,",
            "hint2_Python": "Type name, age in print()",
            "hint1_C": "name - char[], age - int",
            "hint2_C": "In printf use %s for name and %d for age",
            "hint1_C++": "name - string, age - int",
            "hint2_C++": "Use << to separate space and variables in cout",
            "pages": 3,
            "blocks": [
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "gold_ore.png",
                    "cobblestone.png"
                ],
                [
                    "sand.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "gold_ore.png",
                    "gold_ore.png",
                    "cobblestone.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ]
            ]
        }
    ],
    "level6": [
        {
            "input_text_Python": "",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "b",
                        "=",
                        "\"Code\""
                    ],
                    [
                        "print",
                        "(",
                        "b",
                        "[",
                        "1",
                        "]",
                        ")"
                    ],
                    [
                        "print",
                        "(",
                        "b",
                        "[",
                        "2",
                        "]",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "char",
                        "b",
                        "[",
                        "]",
                        "=",
                        "\"Code\"",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"%c\\n\"",
                        "b",
                        "[",
                        "1",
                        "]",
                        ")",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"%c\\n\"",
                        "b",
                        "[",
                        "2",
                        "]",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "#",
                        "include",
                        "<",
                        "string",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "string",
                        "b",
                        "=",
                        "\"Code\"",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "b",
                        "[",
                        "1",
                        "]",
                        "<",
                        "<",
                        "endl",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "b",
                        "[",
                        "2",
                        "]",
                        "<",
                        "<",
                        "endl",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 6.",
                    "",
                    "In this level we will talk more about,",
                    "strings.",
                    "",
                    "Strings are actually arrays so we can",
                    "access thier characters by index.",
                    "First index is 0 and last index is",
                    "length of the string minus one",
                    "",
                    "   a = \"Hello\"",
                    "   #a[0] = \"H\"",
                    "   #a[4] = \"o\""
                ],
                [
                    "We can also loop through them with a",
                    "",
                    "for loop.",
                    "   for character in \"Code\"",
                    "       print(character)",
                    "",
                    "output:",
                    "C",
                    "o",
                    "d",
                    "e"
                ],
                [
                    "To get length (number of characters)",
                    "of a string we use len() function.",
                    "   print(len(\"Hello\"))",
                    "   #output: 5",
                    "",
                    "Make a string b and assign \"Code\"",
                    "to it. Output it's second and third",
                    "character each in new line."
                ]
            ],
            "text_C": [
                [
                    "Level 6.",
                    "",
                    "In this level, we will talk more about",
                    "strings.",
                    "",
                    "Strings are arrays of characters,",
                    "so we can access their characters by",
                    "index. The first index is 0, and the",
                    "last index is the length of the string",
                    "minus one.",
                    "",
                    "   char a[] = \"Hello\";",
                    "   //a[0] = 'H'",
                    "   //a[4] = 'o'"
                ],
                [
                    "We can also loop through strings using",
                    "a for loop:",
                    "",
                    "   char str[] = \"Code\";",
                    "   for (int i = 0; i < 4; i++) {",
                    "       printf(\"%c\\n\", str[i]);",
                    "   }",
                    "",
                    "4 is the length of the string.",
                    "",
                    "Output:",
                    "C",
                    "o",
                    "d",
                    "e"
                ],
                [
                    "Make a string b and assign \"Code\" to it.",
                    "Output its second and third character",
                    "each on a new line."
                ]
            ],
            "text_C++": [
                [
                    "Level 6.",
                    "",
                    "In this level, we will talk more about",
                    "strings.",
                    "",
                    "In C++, strings are part of the <string>",
                    "library, and we can access individual",
                    "characters by index. The first index is",
                    "0, and the last index is the length of",
                    "the string minus one.",
                    "",
                    "   string a = \"Hello\";",
                    "   //a[0] = 'H'",
                    "   //a[4] = 'o'"
                ],
                [
                    "We can also loop through strings using",
                    "a for loop:",
                    "",
                    "   string str = \"Code\";",
                    "   for (int i = 0; i < str.length(); i++) {",
                    "       cout << str[i] << endl;",
                    "   }",
                    "",
                    "Output:",
                    "C",
                    "o",
                    "d",
                    "e"
                ],
                [
                    "To get the length (number of characters)",
                    "of a string, we use the length() method.",
                    "",
                    "   cout << a.length() << endl;",
                    "   //Output: 5",
                    "",
                    "Make a string variable b and assign",
                    "\"Code\" to it. Output its second and",
                    "third character each on a new line."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Use two print() functions",
            "hint2_Python": "Indexes are 1 and 2",
            "hint1_C": "Use two printf() functions with \\n",
            "hint2_C": "Indexes are 1 and 2",
            "hint1_C++": "name - string, age - int",
            "hint2_C++": "Use two cout functions with endl",
            "pages": 3,
            "blocks": [
                [
                    "emerald_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level7": [
        {
            "input_text_Python": "",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "a",
                        "=",
                        "10",
                        ".",
                        "5"
                    ],
                    [
                        "a",
                        "+",
                        "=",
                        "4",
                        ".",
                        "5"
                    ],
                    [
                        "print",
                        "(",
                        "a",
                        ")"
                    ],
                    [
                        "b",
                        "=",
                        "a",
                        ">",
                        "4",
                        ".",
                        "5"
                    ],
                    [
                        "print",
                        "(",
                        "b",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "float",
                        "a",
                        "=",
                        "10",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "a",
                        "+",
                        "=",
                        "4",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"%f\\n\"",
                        "a",
                        ")",
                        ";"
                    ],
                    [
                        "int",
                        "b",
                        "=",
                        "a",
                        ">",
                        "4",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"%d\"",
                        "b",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "float",
                        "a",
                        "=",
                        "10",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "a",
                        "+",
                        "=",
                        "4",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "a",
                        "<",
                        "<",
                        "endl",
                        ";"
                    ],
                    [
                        "bool",
                        "b",
                        "=",
                        "a",
                        ">",
                        "4",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "b",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 7.",
                    "",
                    "In this level we will cover operators",
                    "in Python",
                    "",
                    "Operators are used to perform",
                    "operations on variables and values",
                    "",
                    "Arithmetic operators",
                    "+ -> Addition",
                    "- -> Subtraction",
                    "* -> Multiplication",
                    "/ -> Division",
                    "% -> Modulus",
                    "** -> Exponentiation",
                    "// -> Floor division"
                ],
                [
                    "Assignment operators",
                    "They are used to assign values to",
                    "variables and they always have =",
                    "in them",
                    "",
                    "With them you can replace",
                    "a = a + 5 with a += 5",
                    "same goes with all other arithmetic",
                    "operators",
                    "a = a // 2 -> a //= 2",
                    "a = a ** 3 -> a **= 3",
                    "..."
                ],
                [
                    "Comparison operators",
                    "== -> Equal",
                    "!= -> Not equal",
                    "> -> Greater than",
                    "< -> Less than",
                    ">= -> Greater or equal to",
                    "<= -> Less or equal to",
                    "",
                    "They return a boolean:",
                    "3 == 5 -> False",
                    "4 <= 5 -> True"
                ],
                [
                    "Logical operators",
                    "and -> returns True if both values",
                    "are True",
                    "or -> returns True if any of values",
                    "is True",
                    "not -> reverses boolean value",
                    "  True -> False, False -> True",
                    "",
                    "1 < 2 and 3 <= 3 -> True",
                    "1 > 2 and 4 > 5 -> False",
                    "not 1 == 1 -> False"
                ],
                [
                    "Make a variable a and assign 10.5",
                    "to it, using assignment operators add",
                    "4.5 to it and print it. Make variable b",
                    "and inside of it check if a is bigger",
                    "than 4.5 and print it on new line"
                ]
            ],
            "text_C": [
                [
                    "Level 7.",
                    "",
                    "In this level, we will cover operators",
                    "in C.",
                    "",
                    "Operators are used to perform",
                    "operations on variables and values.",
                    "",
                    "Arithmetic operators:",
                    "+ -> Addition",
                    "- -> Subtraction",
                    "* -> Multiplication",
                    "/ -> Division",
                    "% -> Modulus (remainder)"
                ],
                [
                    "Assignment operators:",
                    "These are used to assign values to",
                    "variables and always include '='.",
                    "",
                    "Example:",
                    "a = a + 5 can be shortened to a += 5.",
                    "This applies to other arithmetic",
                    "operators too.",
                    "",
                    "a = a * 2 -> a *= 2",
                    "a = a / 3 -> a /= 3"
                ],
                [
                    "Comparison operators:",
                    "== -> Equal to",
                    "!= -> Not equal to",
                    "> -> Greater than",
                    "< -> Less than",
                    ">= -> Greater than or equal to",
                    "<= -> Less than or equal to",
                    "",
                    "They return 1 (true) or 0 (false):",
                    "3 == 5 -> 0",
                    "4 <= 5 -> 1"
                ],
                [
                    "Logical operators:",
                    "&& -> returns true if both conditions",
                    "are true",
                    "|| -> returns true if either condition",
                    "is true",
                    "! -> reverses the boolean value",
                    "",
                    "Examples:",
                    "1 < 2 && 3 <= 3 -> 1 (true)",
                    "1 > 2 && 4 > 5 -> 0 (false)",
                    "! (1 == 1) -> 0 (false)"
                ],
                [
                    "Exercise:",
                    "Make a float variable a and assign",
                    "10.5 to it. Use assignment operators",
                    "to add 4.5 to it and print it.",
                    "Create an integer variable b and",
                    "store the result of checking if a is",
                    "greater than 4.5. Print b on a new line."
                ]
            ],
            "text_C++": [
                [
                    "Level 7.",
                    "",
                    "In this level, we will cover operators",
                    "in C++.",
                    "",
                    "Operators are used to perform",
                    "operations on variables and values.",
                    "",
                    "Arithmetic operators:",
                    "+ -> Addition",
                    "- -> Subtraction",
                    "* -> Multiplication",
                    "/ -> Division",
                    "% -> Modulus (remainder)"
                ],
                [
                    "Assignment operators:",
                    "These are used to assign values to",
                    "variables and always include '='.",
                    "",
                    "Example:",
                    "a = a + 5 can be shortened to a += 5.",
                    "This applies to other arithmetic",
                    "operators as well.",
                    "",
                    "a = a * 2 -> a *= 2",
                    "a = a / 3 -> a /= 3"
                ],
                [
                    "Comparison operators:",
                    "== -> Equal to",
                    "!= -> Not equal to",
                    "> -> Greater than",
                    "< -> Less than",
                    ">= -> Greater than or equal to",
                    "<= -> Less than or equal to",
                    "",
                    "They return true or false:",
                    "3 == 5 -> false",
                    "4 <= 5 -> true"
                ],
                [
                    "Logical operators:",
                    "&& -> returns true if both conditions",
                    "are true",
                    "|| -> returns true if either condition",
                    "is true",
                    "! -> reverses the boolean value",
                    "",
                    "Examples:",
                    "1 < 2 && 3 <= 3 -> true",
                    "1 > 2 && 4 > 5 -> false",
                    "! (1 == 1) -> false"
                ],
                [
                    "Exercise:",
                    "Make a float variable a and assign",
                    "10.5 to it. Use assignment operators",
                    "to add 4.5 to it and print it.",
                    "Create a bool variable b and assign",
                    "the result of checking if a is greater",
                    "than 4.5. Print b on a new line."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Use += in 1st task and > in 2nd task",
            "hint2_Python": "x = y > z",
            "hint1_C": "Use += in 1st task and > in 2nd task",
            "hint2_C": "bool x = y > z;",
            "hint1_C++": "Use += in 1st task and > in 2nd task",
            "hint2_C++": "bool x = y > z;",
            "pages": 5,
            "blocks": [
                [
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "farmland.png",
                    "farmland.png",
                    "farmland.png",
                    "farmland.png",
                    "farmland.png",
                    "farmland.png",
                    "farmland.png"
                ],
                [
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ]
            ]
        }
    ],
    "level8": [
        {
            "input_text_Python": "",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "if",
                        "5",
                        ">",
                        "3",
                        ":"
                    ],
                    [
                        "print",
                        "(",
                        "\"Hello, World!\"",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "if",
                        "(",
                        "5",
                        ">",
                        "3",
                        ")",
                        "{"
                    ],
                    [
                        "printf",
                        "(",
                        "\"Hello, World!\"",
                        ")",
                        ";"
                    ],
                    [
                        "}"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "if",
                        "(",
                        "5",
                        ">",
                        "3",
                        ")",
                        "{"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "\"Hello, World!\"",
                        ";"
                    ],
                    [
                        "}"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 8.",
                    "",
                    "In this level we will explain if, elif and",
                    "else statements.",
                    "With this statements we can check if",
                    "given condition is true.",
                    "Condition, for example (b > a), returns",
                    "a boolean value. If that value is True",
                    "code inside the if statement is executed.",
                    "",
                    "   a = 3",
                    "   b = 5",
                    "   if b > a:",
                    "       print(\"b is greater than a\")",
                    "!Indentation is critical in Python.",
                    "It defines the scope of the if block."
                ],
                [
                    "elif is used to check multiple conditions",
                    "else is used if none of the conditions",
                    "before were true",
                    "",
                    "   a = 3",
                    "   b = 5",
                    "   if b > a:",
                    "       print(\"b is greater\")",
                    "   elif a == b:",
                    "       print(\"a and b are equal\")",
                    "   else:",
                    "       print(\"a is greater\")",
                    "output:",
                    "b is greater"
                ],
                [
                    "Logical operators",
                    "and - both conditions must be true",
                    "or - at least one condition must be true",
                    "not - reverses the output of condition",
                    "",
                    "   a = 5",
                    "   b = 3",
                    "   c = 8",
                    "   if a > b and c > a:",
                    "       print(\"Both conditions are True\")",
                    "output:",
                    "Both conditions are True"
                ],
                [
                    "You can nest if statements inside each",
                    "other",
                    "",
                    "   if x > 10:",
                    "       if x > 20",
                    "           print(\"Above 20\")",
                    "",
                    "If you need an empty if statement use",
                    "pass",
                    "",
                    "   if b > a",
                    "       pass",
                    "",
                    "Make a program that outputs",
                    "\"Hello, World!\" if 5 > 3."
                ]
            ],
            "text_C": [
                [
                    "Level 8.",
                    "",
                    "In this level, we will explain if, else if,",
                    "and else statements in C.",
                    "With these statements, we can check if",
                    "a given condition is true.",
                    "A condition, like (b > a), returns a",
                    "boolean result. If it's true, code inside",
                    "the if statement is executed.",
                    "",
                    "   int a = 3;",
                    "   int b = 5;",
                    "   if (b > a) {",
                    "       printf(\"b is greater than a\");",
                    "   }"
                ],
                [
                    "else if is used to check multiple",
                    "conditions, and else is used if none",
                    "of the previous conditions were true.",
                    "",
                    "   int a = 3;",
                    "   int b = 5;",
                    "   if (b > a) {",
                    "       printf(\"b is greater\");",
                    "   } else if (a == b) {",
                    "       printf(\"a and b are equal\");",
                    "   } else {",
                    "       printf(\"a is greater\");",
                    "   }",
                    "Output:",
                    "b is greater"
                ],
                [
                    "Logical operators:",
                    "&& - both conditions must be true",
                    "|| - at least one condition must be true",
                    "! - reverses the output of condition",
                    "",
                    "   int a = 5, b = 3, c = 8;",
                    "   if (a > b && c > a) {",
                    "       printf(\"Both conditions are true\");",
                    "   }",
                    "Output:",
                    "Both conditions are true"
                ],
                [
                    "You can nest if statements inside each",
                    "other:",
                    "",
                    "   if (x > 10) {",
                    "       if (x > 20) {",
                    "           printf(\"Above 20\");",
                    "       }",
                    "   }",
                    "",
                    "If you need an empty if statement, you",
                    "can use an empty block:",
                    "   if (b > a) { }",
                    "",
                    "Make a program that outputs",
                    "\"Hello, World!\" if 5 > 3."
                ]
            ],
            "text_C++": [
                [
                    "Level 8.",
                    "",
                    "In this level, we will explain if, else if,",
                    "and else statements in C++.",
                    "With these statements, we can check if",
                    "a given condition is true.",
                    "A condition, like (b > a), returns a",
                    "boolean result. If it's true, code inside",
                    "the if statement is executed.",
                    "",
                    "   int a = 3;",
                    "   int b = 5;",
                    "   if (b > a) {",
                    "       cout << \"b is greater than a\";",
                    "   }"
                ],
                [
                    "else if is used to check multiple",
                    "conditions, and else is used if none",
                    "of the previous conditions were true.",
                    "",
                    "   int a = 3;",
                    "   int b = 5;",
                    "   if (b > a) {",
                    "       cout << \"b is greater\";",
                    "   } else if (a == b) {",
                    "       cout << \"a and b are equal\";",
                    "   } else {",
                    "       cout << \"a is greater\";",
                    "   }",
                    "Output:",
                    "b is greater"
                ],
                [
                    "Logical operators:",
                    "&& - both conditions must be true",
                    "|| - at least one condition must be true",
                    "! - reverses the output of condition",
                    "",
                    "   int a = 5, b = 3, c = 8;",
                    "   if (a > b && c > a) {",
                    "       cout << \"Both conditions are true\";",
                    "   }",
                    "Output:",
                    "Both conditions are true"
                ],
                [
                    "You can nest if statements inside each",
                    "other:",
                    "",
                    "   if (x > 10) {",
                    "       if (x > 20) {",
                    "           cout << \"Above 20\";",
                    "       }",
                    "   }",
                    "",
                    "If you need an empty if statement, you",
                    "can use an empty block:",
                    "   if (b > a) { }",
                    "",
                    "Make a program that outputs",
                    "\"Hello, World!\" if 5 > 3."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "You need to have print() inside of if",
            "hint2_Python": "if x > y: ...",
            "hint1_C": "You need to have printf() inside of if",
            "hint2_C": "if (x > y) { ... }",
            "hint1_C++": "You need to have cout inside of if",
            "hint2_C++": "if (x > y) { ... }",
            "pages": 4,
            "blocks": [
                [
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png"
                ]
            ]
        }
    ],
    "level9": [
        {
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "solution_Python": [
                [
                    []
                ]
            ],
            "solution_C": [
                [
                    []
                ]
            ],
            "solution_C++": [
                [
                    []
                ]
            ],
            "text_Python": [
                [
                    "Level 9.",
                    "",
                    "In this level, we will explore the concept",
                    "of classes and methods that help us",
                    "move an object around on a 2D grid.",
                    "",
                    "You will see some code that has already",
                    "been written for you. Don't worry about",
                    "trying to understand every detail just",
                    "yet. Just follow along; you might learn",
                    "something new! If it seems confusing,",
                    "that's perfectly fine, this code will be",
                    "already written for you in later levels."
                ],
                [
                    "We will create a class named Mob, which",
                    "represents an object on the grid. This",
                    "class will have properties for its",
                    "position (x and y coordinates) and",
                    "methods to move it in different",
                    "directions."
                ],
                [
                    "The __init__ method is a constructor.",
                    "It's called automatically when you",
                    "create a new Mob object. It sets the",
                    "starting position using the x and y",
                    "parameters.",
                    "",
                    "For example:",
                    "   class Mob:",
                    "       def __init__(self, x, y):",
                    "           self.x = x",
                    "           self.y = y"
                ],
                [
                    "Movement methods are defined within",
                    "the class:",
                    "   - go_up increases the y coordinate.",
                    "   - go_down decreases the y coordinate.",
                    "   - go_right increases the x coordinate.",
                    "   - go_left decreases the x coordinate.",
                    "",
                    "These methods allow us to change the",
                    "Mob's position after it is created.",
                    "",
                    "mob = Mob(0, 0) creates instance of",
                    "Mob on which we can use it's methods.",
                    "For example:",
                    "   mob.go_up(1)"
                ]
            ],
            "text_C": [
                [
                    "Level 9.",
                    "",
                    "In this level, we will explore the concept",
                    "of classes and methods that help us",
                    "move an object around on a 2D grid.",
                    "",
                    "You will see some code that has already",
                    "been written for you. Don't worry about",
                    "trying to understand every detail just",
                    "yet. Just follow along; you might learn",
                    "something new! If it seems confusing,",
                    "that's perfectly fine, this code will be",
                    "already written for you in later levels."
                ],
                [
                    "In C, we use structs to group related",
                    "data. Here, we define a Mob struct that",
                    "contains x and y coordinates to",
                    "represent its position."
                ],
                [
                    "Struct Definition:",
                    "We create the Mob struct with the",
                    "following:",
                    "   struct Mob {",
                    "       int x;",
                    "       int y;",
                    "   };"
                ],
                [
                    "Movement Functions:",
                    "Four functions handle the movement:",
                    "   - go_up adds to the y coordinate.",
                    "   - go_down subtracts from y.",
                    "   - go_right adds to the x coordinate.",
                    "   - go_left subtracts from x.",
                    "",
                    "These functions modify the Mob's",
                    "position based on its current",
                    "coordinates.",
                    "",
                    "struct Mob mob = {0, 0} creates",
                    "instance of Mob on which we can",
                    "call movement functions, like this:",
                    "   go_up(&mob, 1);",
                    "!Don't forget & before mob"
                ]
            ],
            "text_C++": [
                [
                    "Level 9.",
                    "",
                    "In this level, we will explore the concept",
                    "of classes and methods that help us",
                    "move an object around on a 2D grid.",
                    "",
                    "You will see some code that has already",
                    "been written for you. Don't worry about",
                    "trying to understand every detail just",
                    "yet. Just follow along; you might learn",
                    "something new! If it seems confusing,",
                    "that's perfectly fine, this code will be",
                    "already written for you in later levels."
                ],
                [
                    "In C++, classes allow us to define our",
                    "own data types. We'll define a class",
                    "called Mob with attributes for its",
                    "position, x and y."
                ],
                [
                    "Class Definition:",
                    "Here's how we define the Mob class:",
                    "   class Mob {",
                    "       public:",
                    "           int x, y;",
                    "           Mob(int a, int b) {",
                    "               x = a; y = b;",
                    "           }",
                    "   };"
                ],
                [
                    "Movement Methods:",
                    "The Mob class has methods for",
                    "movement:",
                    "   - go_up adds to y.",
                    "   - go_down subtracts from y.",
                    "   - go_right adds to x.",
                    "   - go_left subtracts from x.",
                    "",
                    "These methods allow us to change",
                    "the Mob's position on the grid.",
                    "",
                    "Mob mob(0, 0); creates",
                    "instance of Mob on which we can",
                    "call movement functions, like this:",
                    "   mob.go_up(1);"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Just press run",
            "hint2_Python": "...",
            "hint1_C": "Just press run",
            "hint2_C": "...",
            "hint1_C++": "Just press run",
            "hint2_C++": "...",
            "pages": 4,
            "blocks": [
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "diamond_ore.png",
                    "diamond_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "diamond_ore.png",
                    "diamond_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "gold_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "coal_ore.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "coal_ore.png"
                ],
                [
                    "emerald_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png"
                ]
            ]
        }
    ],
    "level10": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 10.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 10.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 10.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "mob.go_right(x) and mob.go_up(y)",
            "hint2_Python": "x and y are number of blocks to move",
            "hint1_C": "go_right(&mob, x) and go_up(&mob, y)",
            "hint2_C": "x and y are number of blocks to move",
            "hint1_C++": "mob.go_right(x) and mob.go_up(y)",
            "hint2_C++": "x and y are number of blocks to move",
            "pages": 2,
            "blocks": [
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "oak_trapdoor.png"
                ],
                [
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "diamond_ore.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "diamond_ore.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level11": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 11.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 11.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 11.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "2x mob.go_right(x) and mob.go_up(y)",
            "hint2_Python": "right -> up -> right",
            "hint1_C": "2x go_right(&mob, x) and go_up(&mob, y)",
            "hint2_C": "right -> up -> right",
            "hint1_C++": "2x mob.go_right(x) and mob.go_up(y)",
            "hint2_C++": "right -> up -> right",
            "pages": 2,
            "blocks": [
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "oak_trapdoor.png"
                ],
                [
                    "cobblestone.png",
                    "diamond_ore.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "sand.png",
                    "sandstone_top.png",
                    "sandstone_top.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "sand.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "emerald_ore.png"
                ]
            ]
        }
    ],
    "level12": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 12.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 12.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 12.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "mob.go_right(x), 2x mob.go_up(y) and 2x mob.go_left(z)",
            "hint2_Python": "right -> up -> left -> up -> left",
            "hint1_C": "go_right(&mob, x), 2x go_up(&mob, y) and 2x go_left(&mob, z)",
            "hint2_C": "right -> up -> left -> up -> left",
            "hint1_C++": "mob.go_right(x), 2x mob.go_up(y) and 2x mob.go_left(z)",
            "hint2_C++": "right -> up -> left -> up -> left",
            "pages": 2,
            "blocks": [
                [
                    "oak_trapdoor.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "sandstone_top.png",
                    "sand.png"
                ],
                [
                    "oak_log_top.png",
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level13": [
        {
            "steve_xy": [
                0,
                6
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 13.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 13.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 13.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "mob.go_right(x), 2x mob.go_down(y) and 2x mob.go_left(z)",
            "hint2_Python": "right -> down -> left -> down -> left",
            "hint1_C": "go_right(&mob, x), 2x go_down(&mob, y) and 2x go_left(&mob, z)",
            "hint2_C": "right -> down -> left -> down -> left",
            "hint1_C++": "mob.go_right(x), 2x mob.go_down(y) and 2x mob.go_left(z)",
            "hint2_C++": "right -> down -> left -> down -> left",
            "pages": 2,
            "blocks": [
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "gold_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "coal_ore.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png",
                    "grass_top.png",
                    "emerald_ore.png",
                    "cobblestone.png",
                    "diamond_ore.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "emerald_ore.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "oak_trapdoor.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ]
            ]
        }
    ],
    "level14": [
        {
            "steve_xy": [
                3,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 14.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 14.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 14.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "mob.go_up(x)",
            "hint2_Python": "up",
            "hint1_C": "go_up(&mob, x)",
            "hint2_C": "up",
            "hint1_C++": "mob.go_up(x)",
            "hint2_C++": "up",
            "pages": 2,
            "blocks": [
                [
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png",
                    "oak_trapdoor.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "coal_ore.png",
                    "sand.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "diamond_ore.png",
                    "diamond_ore.png"
                ],
                [
                    "coal_ore.png",
                    "cobblestone.png",
                    "sand.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "diamond_ore.png",
                    "diamond_ore.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "pressure_plate.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "gold_ore.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "coal_ore.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ]
            ]
        }
    ],
    "level15": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 15.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 15.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 15.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "2x mob.go_right(x), 3x mob.go_up(y) and mob.go_left(z)",
            "hint2_Python": "right -> up -> left -> up -> right -> up",
            "hint1_C": "2x go_right(&mob, x), 3x go_up(&mob, y) and go_left(&mob, z)",
            "hint2_C": "right -> up -> left -> up -> right -> up",
            "hint1_C++": "2x mob.go_right(x), 3x mob.go_up(y) and mob.go_left(z)",
            "hint2_C++": "right -> up -> left -> up -> right -> up",
            "pages": 2,
            "blocks": [
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sand.png",
                    "oak_trapdoor.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "pressure_plate.png",
                    "sand.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "cobblestone.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level16": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 16.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 16.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 16.",
                    "",
                    "In this level you will use code to move",
                    "Mob around the map",
                    "map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks and you need",
                    "to step on pressure plate to unlock",
                    "the trapdoor"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "3x mob.go_right(x), 2x mob.go_up(y) and mob.go_left(z)",
            "hint2_Python": "right -> up -> right -> left -> up -> right",
            "hint1_C": "3x go_right(&mob, x), 2x go_up(&mob, y) and go_left(&mob, z)",
            "hint2_C": "right -> up -> right -> left -> up -> right",
            "hint1_C++": "3x mob.go_right(x), 2x mob.go_up(y) and mob.go_left(z)",
            "hint2_C++": "right -> up -> right -> left -> up -> right",
            "pages": 2,
            "blocks": [
                [
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "oak_trapdoor.png"
                ],
                [
                    "oak_log_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png"
                ],
                [
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "pressure_plate.png",
                    "cobblestone.png",
                    "coal_ore.png"
                ],
                [
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "dirt.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "emerald_ore.png",
                    "cobblestone.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ]
            ]
        }
    ],
    "level17": [
        {
            "steve_xy": [
                3,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 17.",
                    "",
                    "In this level, you will learn about loops",
                    "and how to implement them in your",
                    "code.",
                    "",
                    "In Python, a for loop is structured like",
                    "this:",
                    "for i in range(5):",
                    "   #code"
                ],
                [
                    "Here, 'i' is the variable that changes",
                    "with each iteration of the loop.",
                    "",
                    "The function range(5) generates a",
                    "sequence of numbers starting from 0",
                    "up to (but not including) 5. This results",
                    "in the list: [0, 1, 2, 3, 4].",
                    "",
                    "The code inside the loop will be",
                    "executed for each value of 'i' within",
                    "that range."
                ],
                [
                    "For example:",
                    "for i in range(5):",
                    "   print(i)",
                    "",
                    "This will output:",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                [
                    "Your task is to move the Mob to the",
                    "finish, which is the trapdoor, but you",
                    "can only use: mob.go_up(1)",
                    "",
                    "Do this by repeating that function with",
                    "for loop 6 times",
                    "",
                    "To close this book, press Ctrl + E."
                ]
            ],
            "text_C": [
                [
                    "Level 17.",
                    "",
                    "In this level, you'll learn about loops",
                    "and how to implement them in your",
                    "code.",
                    "",
                    "In C, a for loop is structured like this:",
                    "for (int i = 0; i < 5; i++) {",
                    "   // code",
                    "}"
                ],
                [
                    "'i' is the loop variable that increments",
                    "with each iteration.",
                    "",
                    "The loop starts at 0 and continues until",
                    "it reaches 5 (5 is not included).",
                    "",
                    "This means the loop will run for values:",
                    "0, 1, 2, 3, 4."
                ],
                [
                    "For example:",
                    "for (int i = 0; i < 5; i++) {",
                    "   printf(\"%d\\n\", i);",
                    "}",
                    "",
                    "This will produce the following output:",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                [
                    "Your task is to move the Mob to the",
                    "finish, which is the trapdoor, but you",
                    "can only use: go_up(&mob, 1);",
                    "",
                    "Do this by repeating that function with",
                    "for loop 6 times",
                    "",
                    "To close this book, use Ctrl + E."
                ]
            ],
            "text_C++": [
                [
                    "Level 17.",
                    "",
                    "In this level, you will learn about loops",
                    "and how to apply them in your code.",
                    "",
                    "In C++, a for loop is structured like this:",
                    "for (int i = 0; i < 5; i++) {",
                    "   // code",
                    "}"
                ],
                [
                    "'i' is the loop variable that will be",
                    "updated during each iteration.",
                    "",
                    "The loop starts at 0 and runs until it",
                    "reaches 5 (5 is not included),",
                    "producing the values: 0, 1, 2, 3, 4."
                ],
                [
                    "For example:",
                    "for (int i = 0; i < 5; i++) {",
                    "   cout << i << endl;",
                    "}",
                    "",
                    "This will output:",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                [
                    "Your task is to move the Mob to the",
                    "finish, which is the trapdoor, but you",
                    "can only use: mob.go_up(1);",
                    "",
                    "Do this by repeating that function with",
                    "for loop 6 times",
                    "",
                    "To close this book, press Ctrl + E."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "for i in range(n):",
            "hint2_Python": "Replace n with 6",
            "hint1_C": "for (int i = 0; i < n; i++) {",
            "hint2_C": "Replace n with 6",
            "hint1_C++": "for (int i = 0; i < n; i++) {",
            "hint2_C++": "Replace n with 6",
            "pages": 4,
            "blocks": [
                [
                    "netherrack.png",
                    "nether_quartz.png",
                    "netherrack.png",
                    "oak_trapdoor.png",
                    "soul_sand.png",
                    "soul_sand.png",
                    "soul_sand.png"
                ],
                [
                    "nether_quartz.png",
                    "nether_quartz.png",
                    "netherrack.png",
                    "bedrock.png",
                    "soul_sand.png",
                    "soul_soil.png",
                    "soul_soil.png"
                ],
                [
                    "nether_quartz.png",
                    "nether_quartz.png",
                    "nether_quartz.png",
                    "bedrock.png",
                    "soul_sand.png",
                    "soul_soil.png",
                    "soul_soil.png"
                ],
                [
                    "nether_quartz.png",
                    "nether_quartz.png",
                    "nether_quartz.png",
                    "bedrock.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "netherrack.png"
                ],
                [
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "bedrock.png",
                    "soul_soil.png",
                    "netherrack.png",
                    "netherrack.png"
                ],
                [
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "bedrock.png",
                    "netherrack.png",
                    "nether_gold_ore.png",
                    "netherrack.png"
                ],
                [
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "bedrock.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png"
                ]
            ]
        }
    ],
    "level18": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 18.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 18.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 18.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Code in your loop should run twice",
            "hint2_Python": "mob.go_up(n) and mob.go_right(n)",
            "hint1_C": "Code in your loop should run twice",
            "hint2_C": "go_up(&mob, n) and go_right(&mob, n)",
            "hint1_C++": "Code in your loop should run twice",
            "hint2_C++": "mob.go_up(n) and mob.go_right(n)",
            "pages": 2,
            "blocks": [
                [
                    "soul_sand.png",
                    "soul_sand.png",
                    "soul_sand.png",
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "oak_trapdoor.png"
                ],
                [
                    "soul_sand.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "bedrock.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png"
                ],
                [
                    "soul_sand.png",
                    "soul_soil.png",
                    "netherrack.png",
                    "bedrock.png",
                    "netherrack.png",
                    "nether_quartz.png",
                    "nether_quartz.png"
                ],
                [
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "netherrack.png",
                    "nether_quartz.png",
                    "nether_quartz.png"
                ],
                [
                    "bedrock.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "soul_soil.png"
                ],
                [
                    "bedrock.png",
                    "netherrack.png",
                    "nether_gold_ore.png",
                    "nether_gold_ore.png",
                    "nether_gold_ore.png",
                    "netherrack.png",
                    "soul_soil.png"
                ],
                [
                    "bedrock.png",
                    "netherrack.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "soul_sand.png"
                ]
            ]
        }
    ],
    "level19": [
        {
            "steve_xy": [
                0,
                6
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 19.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 19.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 19.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Code in your loop should run twice",
            "hint2_Python": "mob.go_right(n) and mob.go_down(n)",
            "hint1_C": "Code in your loop should run twice",
            "hint2_C": "go_right(&mob, n) and go_down(&mob, n)",
            "hint1_C++": "Code in your loop should run twice",
            "hint2_C++": "mob.go_right(n) and mob.go_down(n)",
            "pages": 2,
            "blocks": [
                [
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "soul_soil.png",
                    "soul_sand.png",
                    "netherrack.png"
                ],
                [
                    "soul_sand.png",
                    "nether_quartz.png",
                    "netherrack.png",
                    "bedrock.png",
                    "soul_soil.png",
                    "soul_sand.png",
                    "soul_sand.png"
                ],
                [
                    "nether_quartz.png",
                    "nether_quartz.png",
                    "netherrack.png",
                    "bedrock.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "soul_soil.png"
                ],
                [
                    "nether_quartz.png",
                    "nether_quartz.png",
                    "netherrack.png",
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png"
                ],
                [
                    "nether_quartz.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "bedrock.png"
                ],
                [
                    "soul_soil.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "nether_gold_ore.png",
                    "bedrock.png"
                ],
                [
                    "soul_soil.png",
                    "soul_soil.png",
                    "netherrack.png",
                    "nether_gold_ore.png",
                    "netherrack.png",
                    "nether_gold_ore.png",
                    "oak_trapdoor.png"
                ]
            ]
        }
    ],
    "level20": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 20.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 20.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 20.",
                    "",
                    "In this level you will use code with for",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Code in your loop should run 6 times",
            "hint2_Python": "mob.go_up(n) and mob.go_right(n)",
            "hint1_C": "Code in your loop should run 6 times",
            "hint2_C": "go_up(&mob, n) and go_right(&mob, n)",
            "hint1_C++": "Code in your loop should run 6 times",
            "hint2_C++": "mob.go_up(n) and mob.go_right(n)",
            "pages": 2,
            "blocks": [
                [
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "bedrock.png",
                    "oak_trapdoor.png"
                ],
                [
                    "netherrack.png",
                    "netherrack.png",
                    "soul_sand.png",
                    "soul_soil.png",
                    "bedrock.png",
                    "bedrock.png",
                    "netherrack.png"
                ],
                [
                    "netherrack.png",
                    "soul_sand.png",
                    "soul_sand.png",
                    "bedrock.png",
                    "bedrock.png",
                    "netherrack.png",
                    "nether_gold_ore.png"
                ],
                [
                    "soul_soil.png",
                    "soul_soil.png",
                    "bedrock.png",
                    "bedrock.png",
                    "netherrack.png",
                    "nether_gold_ore.png",
                    "nether_gold_ore.png"
                ],
                [
                    "soul_soil.png",
                    "bedrock.png",
                    "bedrock.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "soul_sand.png"
                ],
                [
                    "bedrock.png",
                    "bedrock.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "soul_sand.png",
                    "soul_sand.png"
                ],
                [
                    "bedrock.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "soul_sand.png",
                    "soul_sand.png"
                ]
            ]
        }
    ],
    "level21": [
        {
            "steve_xy": [
                3,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 21.",
                    "",
                    "In this level, you will learn about while",
                    "loops and how to implement them in",
                    "your code.",
                    "",
                    "While loops are another type of loop in",
                    "Python. With a while loop, we can",
                    "execute code as long as a specified",
                    "condition remains true."
                ],
                [
                    "For example:",
                    "i = 0",
                    "while i < 6:",
                    "   print(i)",
                    "   i += 1",
                    "",
                    "This will produce the output:",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                ],
                [
                    "When using while loops, it's essential to",
                    "initialize a variable that will change",
                    "during the loop. This was demonstrated",
                    "in the previous example."
                ],
                [
                    "Your task is to move the Mob to the",
                    "finish, which is the trapdoor, but you",
                    "can only use: mob.go_up(1)",
                    "",
                    "Do this by repeating that function with",
                    "while loop 6 times",
                    "",
                    "To close this book, press Ctrl + E."
                ]
            ],
            "text_C": [
                [
                    "Level 21.",
                    "",
                    "In this level, you will learn about while",
                    "loops and how to implement them in",
                    "your code.",
                    "",
                    "A while loop in C allows you to execute",
                    "code as long as a given condition is",
                    "true."
                ],
                [
                    "For example:",
                    "int i = 0;",
                    "while (i < 6) {",
                    "   printf(\"%d\\n\", i);",
                    "   i++;",
                    "}",
                    "",
                    "This will produce the output:",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                ],
                [
                    "When using while loops, it's essential to",
                    "initialize a variable that will change",
                    "during the loop. This was demonstrated",
                    "in the previous example."
                ],
                [
                    "Your task is to move the Mob to the",
                    "finish, which is the trapdoor, but you",
                    "can only use: mob.go_up(1)",
                    "",
                    "Do this by repeating that function with",
                    "while loop 6 times",
                    "",
                    "To close this book, press Ctrl + E."
                ]
            ],
            "text_C++": [
                [
                    "Level 21.",
                    "",
                    "In this level, you will learn about while",
                    "loops and how to implement them in",
                    "your code.",
                    "",
                    "A while loop in C++ allows you to",
                    "execute code as long as a given",
                    "condition is true."
                ],
                [
                    "For example:",
                    "int i = 0;",
                    "while (i < 6) {",
                    "   cout << i << endl;",
                    "   i++;",
                    "}",
                    "",
                    "This will produce the output:",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                ],
                [
                    "When using while loops, it's essential to",
                    "initialize a variable that will change",
                    "during the loop. This was demonstrated",
                    "in the previous example."
                ],
                [
                    "Your task is to move the Mob to the",
                    "finish, which is the trapdoor, but you",
                    "can only use: mob.go_up(1)",
                    "",
                    "Do this by repeating that function with",
                    "while loop 6 times",
                    "",
                    "To close this book, press Ctrl + E."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Don't forget i = 0",
            "hint2_Python": "while i < n:",
            "hint1_C": "Don't forget int i = 0;",
            "hint2_C": "while (i < n) {",
            "hint1_C++": "Don't forget int i = 0;",
            "hint2_C++": "while (i < n) {",
            "pages": 4,
            "blocks": [
                [
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "oak_trapdoor.png",
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone.png"
                ],
                [
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png"
                ],
                [
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png"
                ],
                [
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone.png",
                    "purpur_block.png",
                    "end_stone.png",
                    "chorus_plant.png",
                    "chorus_plant.png"
                ],
                [
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone.png",
                    "purpur_block.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png"
                ],
                [
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone.png",
                    "purpur_block.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png"
                ],
                [
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone.png",
                    "purpur_block.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png"
                ]
            ]
        }
    ],
    "level22": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 22.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 22.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 22.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Code in your loop should run twice",
            "hint2_Python": "mob.go_up(n) and mob.go_right(n)",
            "hint1_C": "Code in your loop should run twice",
            "hint2_C": "go_up(&mob, n) and go_right(&mob, n)",
            "hint1_C++": "Code in your loop should run twice",
            "hint2_C++": "mob.go_up(n) and mob.go_right(n)",
            "pages": 2,
            "blocks": [
                [
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "oak_trapdoor.png"
                ],
                [
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png"
                ],
                [
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png",
                    "end_stone.png"
                ],
                [
                    "purpur_block.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png",
                    "end_stone.png"
                ],
                [
                    "purpur_block.png",
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone.png"
                ],
                [
                    "purpur_block.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone.png"
                ],
                [
                    "purpur_block.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone.png"
                ]
            ]
        }
    ],
    "level23": [
        {
            "steve_xy": [
                0,
                6
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 23.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 23.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 23.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Code in your loop should run twice",
            "hint2_Python": "mob.go_right(n) and mob.go_down(n)",
            "hint1_C": "Code in your loop should run twice",
            "hint2_C": "go_right(&mob, n) and go_down(&mob, n)",
            "hint1_C++": "Code in your loop should run twice",
            "hint2_C++": "mob.go_right(n) and mob.go_down(n)",
            "pages": 2,
            "blocks": [
                [
                    "purpur_block.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone.png"
                ],
                [
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone.png"
                ],
                [
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png"
                ],
                [
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "purpur_block.png"
                ],
                [
                    "end_stone.png",
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "end_stone_bricks.png",
                    "purpur_block.png"
                ],
                [
                    "end_stone.png",
                    "chorus_plant.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "chorus_plant.png",
                    "end_stone_bricks.png",
                    "purpur_block.png"
                ],
                [
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "oak_trapdoor.png"
                ]
            ]
        }
    ],
    "level24": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 24.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C": [
                [
                    "Level 24.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "text_C++": [
                [
                    "Level 24.",
                    "",
                    "In this level you will use code with while",
                    "loops to move Mob around the map",
                    "",
                    "Finish is the trapdoor and you can",
                    "only go on grass blocks"
                ],
                [
                    "Use functions from class Mob to move",
                    "Mob across the map to finish",
                    "",
                    "To close this book use",
                    "Ctrl+E"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Code in your loop should run 6 times",
            "hint2_Python": "mob.go_up(n) and mob.go_right(n)",
            "hint1_C": "Code in your loop should run 6 times",
            "hint2_C": "go_up(&mob, n) and go_right(&mob, n)",
            "hint1_C++": "Code in your loop should run 6 times",
            "hint2_C++": "mob.go_up(n) and mob.go_right(n)",
            "pages": 2,
            "blocks": [
                [
                    "end_stone.png",
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "oak_trapdoor.png"
                ],
                [
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png"
                ],
                [
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png"
                ],
                [
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone_bricks.png"
                ],
                [
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png"
                ],
                [
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png",
                    "chorus_plant.png"
                ],
                [
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone_bricks.png"
                ]
            ]
        }
    ],
    "level25": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "pritn(\"Code_Craft\")",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    pritnf(\"Code_Craft\");\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n    cuot << \"Code_Craft\";\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "print",
                        "(",
                        "\"Code_Craft\"",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "printf",
                        "(",
                        "\"Code_Craft\"",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "\"Code_Craft\"",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 25.",
                    "",
                    "From this level on, we will learn a little",
                    "bit about debugging as it is a really",
                    "important part of programming",
                    "",
                    "Debugging is the process of finding and",
                    "fixing errors, or \"bugs\", in code that",
                    "stop it from working as intended.",
                    "",
                    "Errors can be simple, like typos, or",
                    "more challenging to identify, such as",
                    "logical mistakes that cause unexpected",
                    "behavior in the code."
                ],
                [
                    "Try to find a typo in the given code",
                    "and fix it."
                ]
            ],
            "text_C": [
                [
                    "Level 25.",
                    "",
                    "From this level on, we will learn a little",
                    "bit about debugging as it is a really",
                    "important part of programming",
                    "",
                    "Debugging is the process of finding and",
                    "fixing errors, or \"bugs\", in code that",
                    "stop it from working as intended.",
                    "",
                    "Errors can be simple, like typos, or",
                    "more challenging to identify, such as",
                    "logical mistakes that cause unexpected",
                    "behavior in the code."
                ],
                [
                    "Try to find a typo in the given code",
                    "and fix it."
                ]
            ],
            "text_C++": [
                [
                    "Level 25.",
                    "",
                    "From this level on, we will learn a little",
                    "bit about debugging as it is a really",
                    "important part of programming",
                    "",
                    "Debugging is the process of finding and",
                    "fixing errors, or \"bugs\", in code that",
                    "stop it from working as intended.",
                    "",
                    "Errors can be simple, like typos, or",
                    "more challenging to identify, such as",
                    "logical mistakes that cause unexpected",
                    "behavior in the code."
                ],
                [
                    "Try to find a typo in the given code",
                    "and fix it."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "print()",
            "hint2_Python": "print() instead of pritn()",
            "hint1_C": "printf()",
            "hint2_C": "printf() instead of pritnf()",
            "hint1_C++": "cout",
            "hint2_C++": "cout instead of cuot",
            "pages": 2,
            "blocks": [
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "steve_front.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level26": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "//This is a comment",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    /This is a comment\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n    /This is a comment\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "#",
                        "This",
                        "is",
                        "a",
                        "comment"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "/",
                        "/",
                        "This",
                        "is",
                        "a",
                        "comment"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "/",
                        "/",
                        "This",
                        "is",
                        "a",
                        "comment"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 26.",
                    "",
                    "There's an issue with the comment",
                    "in this code. Try to fix it."
                ]
            ],
            "text_C": [
                [
                    "Level 26.",
                    "",
                    "There's an issue with the comment",
                    "in this code. Try to fix it."
                ]
            ],
            "text_C++": [
                [
                    "Level 26.",
                    "",
                    "There's an issue with the comment",
                    "in this code. Try to fix it."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "#",
            "hint2_Python": "# instead od //",
            "hint1_C": "//",
            "hint2_C": "There is one / missing",
            "hint1_C++": "//",
            "hint2_C++": "There is one / missing",
            "pages": 1,
            "blocks": [
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level27": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "a == 5:5",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    flaot a = 5:5;\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n    flaot a = 5:5;\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "a",
                        "=",
                        "5",
                        ".",
                        "5"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "float",
                        "a",
                        "=",
                        "5",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "float",
                        "a",
                        "=",
                        "5",
                        ".",
                        "5",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 27.",
                    "",
                    "Variable a should be a float of value",
                    "five and a half, but there's an issue",
                    "in its declaration."
                ]
            ],
            "text_C": [
                [
                    "Level 27.",
                    "",
                    "Variable a should be a float of value",
                    "five and a half, but there's an issue",
                    "in its declaration."
                ]
            ],
            "text_C++": [
                [
                    "Level 27.",
                    "",
                    "Variable a should be a float of value",
                    "five and a half, but there's an issue",
                    "in its declaration."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "There is one = extra",
            "hint2_Python": ". instead of :",
            "hint1_C": "float",
            "hint2_C": ". instead of :",
            "hint1_C++": "float",
            "hint2_C++": ". instead of :",
            "pages": 1,
            "blocks": [
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "oak_log_top.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level28": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "a = \"Steve",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    char a[] = \"Steve;\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string a = \"Steve;\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "a",
                        "=",
                        "\"Steve\""
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "char",
                        "a",
                        "[",
                        "]",
                        "=",
                        "\"Steve\"",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "#",
                        "include",
                        "<",
                        "string",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "string",
                        "a",
                        "=",
                        "\"Steve\"",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 28.",
                    "",
                    "Variable a should be a string of value",
                    "\"Steve\", but there's an issue in its",
                    "declaration."
                ]
            ],
            "text_C": [
                [
                    "Level 28.",
                    "",
                    "Variable a should be a string of value",
                    "\"Steve\", but there's an issue in its",
                    "declaration."
                ]
            ],
            "text_C++": [
                [
                    "Level 28.",
                    "",
                    "Variable a should be a string of value",
                    "\"Steve\", but there's an issue in its",
                    "declaration."
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "\"",
            "hint2_Python": "One \" is missing",
            "hint1_C": "\"",
            "hint2_C": "One \" is missing",
            "hint1_C++": "\"",
            "hint2_C++": "One \" is missing",
            "pages": 1,
            "blocks": [
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "dirt.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "grass_top.png",
                    "grass_top.png",
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level29": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "name = \"Buddy\"\nage = 3\nprint(name; age)",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    char name[] = \"Buddy\";\n    int age = 3;\n    printf(\"%d %s\\n\", name, age);\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string name = \"Buddy\";\n    int age = 3;\n    cout << name, \" \", age << endl;\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "name",
                        "=",
                        "\"Buddy\""
                    ],
                    [
                        "age",
                        "=",
                        "3"
                    ],
                    [
                        "print",
                        "(",
                        "name",
                        "age",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "char",
                        "name",
                        "[",
                        "]",
                        "=",
                        "\"Buddy\"",
                        ";"
                    ],
                    [
                        "int",
                        "age",
                        "=",
                        "3",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"%s %d\\n\"",
                        "name",
                        "age",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "#",
                        "include",
                        "<",
                        "string",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "string",
                        "name",
                        "=",
                        "\"Buddy\"",
                        ";"
                    ],
                    [
                        "int",
                        "age",
                        "=",
                        "3",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "name",
                        "<",
                        "<",
                        "\" \"",
                        "<",
                        "<",
                        "age",
                        "<",
                        "<",
                        "endl",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 29.",
                    "",
                    "This code should output variables:",
                    "name and age in the same line with a",
                    "space between them, but there is an",
                    "error in it"
                ]
            ],
            "text_C": [
                [
                    "Level 29.",
                    "",
                    "This code should output variables:",
                    "name and age in the same line with a",
                    "space between them, but there is an",
                    "error in it"
                ]
            ],
            "text_C++": [
                [
                    "Level 29.",
                    "",
                    "This code should output variables:",
                    "name and age in the same line with a",
                    "space between them, but there is an",
                    "error in it"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": ",",
            "hint2_Python": ", instead of ;",
            "hint1_C": "%d <-> %s",
            "hint2_C": "switch %d and %s",
            "hint1_C++": "<<",
            "hint2_C++": "<< instead of ,",
            "pages": 1,
            "blocks": [
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "coal_ore.png",
                    "coal_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "gold_ore.png",
                    "cobblestone.png"
                ],
                [
                    "sand.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "gold_ore.png",
                    "gold_ore.png",
                    "cobblestone.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ]
            ]
        }
    ],
    "level30": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "a = \"Code_Craft\"\nprint(a(6))",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    char a[] = \"Code_Craft\";\n    printf(\"%c\\n\", a(6));\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string a = \"Code_Craft\";\n    cout << a(6) << endl;\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "a",
                        "=",
                        "\"Code_Craft\""
                    ],
                    [
                        "print",
                        "(",
                        "a",
                        "[",
                        "5",
                        "]",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "char",
                        "a",
                        "[",
                        "]",
                        "=",
                        "\"Code_Craft\"",
                        ";"
                    ],
                    [
                        "printf",
                        "(",
                        "\"%c\\n\"",
                        "a",
                        "[",
                        "5",
                        "]",
                        ")",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "#",
                        "include",
                        "<",
                        "string",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "string",
                        "a",
                        "=",
                        "\"Code_Craft\"",
                        ";"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "a",
                        "[",
                        "5",
                        "]",
                        "<",
                        "<",
                        "endl",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 30.",
                    "",
                    "This code should output second C",
                    "from variable a, but there are errors",
                    "in print() function"
                ]
            ],
            "text_C": [
                [
                    "Level 30.",
                    "",
                    "This code should output second C",
                    "from variable a, but there are errors",
                    "in printf() function"
                ]
            ],
            "text_C++": [
                [
                    "Level 30.",
                    "",
                    "This code should output second C",
                    "from variable a but there are errors",
                    "in cout function"
                ]
            ],
            "hint1_unlocked": true,
            "hint2_unlocked": true,
            "hint1_Python": "[] are used for indexing",
            "hint2_Python": "Index is too big",
            "hint1_C": "[] are used for indexing",
            "hint2_C": "Index is too big",
            "hint1_C++": "[] are used for indexing",
            "hint2_C++": "Index is too big",
            "pages": 1,
            "blocks": [
                [
                    "emerald_ore.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "cobblestone.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level31": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "a = 5\na =+ 10",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    int a = 5;\n    a =+ 10;\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int a = 5;\n    a =+ 10;\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "a",
                        "=",
                        "5"
                    ],
                    [
                        "a",
                        "+",
                        "=",
                        "10"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "int",
                        "a",
                        "=",
                        "5",
                        ";"
                    ],
                    [
                        "a",
                        "+",
                        "=",
                        "10",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "int",
                        "a",
                        "=",
                        "5",
                        ";"
                    ],
                    [
                        "a",
                        "+",
                        "=",
                        "10",
                        ";"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 31.",
                    "",
                    "Variable a should have value of 15",
                    "after executing this code but there is",
                    "an error in it"
                ]
            ],
            "text_C": [
                [
                    "Level 31.",
                    "",
                    "Variable a should have value of 15",
                    "after executing this code but there is",
                    "an error in it"
                ]
            ],
            "text_C++": [
                [
                    "Level 31.",
                    "",
                    "Variable a should have value of 15",
                    "after executing this code but there is",
                    "an error in it"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "+=",
            "hint2_Python": "+= instead of =+",
            "hint1_C": "+=",
            "hint2_C": "+= instead of =+",
            "hint1_C++": "+=",
            "hint2_C++": "+= instead of =+",
            "pages": 1,
            "blocks": [
                [
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png"
                ],
                [
                    "farmland.png",
                    "farmland.png",
                    "farmland.png",
                    "farmland.png",
                    "farmland.png",
                    "farmland.png",
                    "farmland.png"
                ],
                [
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "farmland_moist.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png"
                ]
            ]
        }
    ],
    "level32": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "a = 5\nb = 10\nif a > b\n    print(\"a is smaller than b\")",
            "input_text_C": "#include <stdio.h>\n\nint main() {\n    int a = 5;\n    int b = 10;\n    if a > b {\n        printf(\"a is smaller than b\\n\");\n    }\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int a = 5;\n    int b = 10;\n    if a > b {\n        cout << \"a is smaller than b\" << endl;\n    }\n    return 0;\n}",
            "solution_Python": [
                [
                    [
                        "a",
                        "=",
                        "5"
                    ],
                    [
                        "b",
                        "=",
                        "10"
                    ],
                    [
                        "if",
                        "a",
                        "<",
                        "b",
                        ":"
                    ],
                    [
                        "print",
                        "(",
                        "\"a is smaller than b\"",
                        ")"
                    ]
                ]
            ],
            "solution_C": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "stdio",
                        ".",
                        "h",
                        ">"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "int",
                        "a",
                        "=",
                        "5",
                        ";"
                    ],
                    [
                        "int",
                        "b",
                        "=",
                        "10",
                        ";"
                    ],
                    [
                        "if",
                        "(",
                        "a",
                        "<",
                        "b",
                        ")",
                        "{"
                    ],
                    [
                        "printf",
                        "(",
                        "\"a is smaller than b\\n\"",
                        ")",
                        ";"
                    ],
                    [
                        "}"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "solution_C++": [
                [
                    [
                        "#",
                        "include",
                        "<",
                        "iostream",
                        ">"
                    ],
                    [
                        "using",
                        "namespace",
                        "std",
                        ";"
                    ],
                    [
                        "int",
                        "main",
                        "(",
                        ")",
                        "{"
                    ],
                    [
                        "int",
                        "a",
                        "=",
                        "5",
                        ";"
                    ],
                    [
                        "int",
                        "b",
                        "=",
                        "10",
                        ";"
                    ],
                    [
                        "if",
                        "(",
                        "a",
                        "<",
                        "b",
                        ")",
                        "{"
                    ],
                    [
                        "cout",
                        "<",
                        "<",
                        "\"a is smaller than b\"",
                        "<",
                        "<",
                        "endl",
                        ";"
                    ],
                    [
                        "}"
                    ],
                    [
                        "return",
                        "0",
                        ";"
                    ],
                    [
                        "}"
                    ]
                ]
            ],
            "text_Python": [
                [
                    "Level 32.",
                    "",
                    "Replace the comparison operator in if",
                    "and fix the if statement to make it",
                    "valid, to make this code output:",
                    "\"a is smaller than b\" "
                ]
            ],
            "text_C": [
                [
                    "Level 32.",
                    "",
                    "Variable a should have value of 15",
                    "after executing this code but there is",
                    "an error in it"
                ]
            ],
            "text_C++": [
                [
                    "Level 32.",
                    "",
                    "Variable a should have value of 15",
                    "after executing this code but there is",
                    "an error in it"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "Missing :",
            "hint2_Python": "< instead of >",
            "hint1_C": "Missing { and }",
            "hint2_C": "< instead of >",
            "hint1_C++": "Missing { and }",
            "hint2_C++": "< instead of >",
            "pages": 1,
            "blocks": [
                [
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png",
                    "sandstone_top.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "sandstone_top.png"
                ]
            ]
        }
    ],
    "level33": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)\nmob:go-left[7]\nmob;godown{5}",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n    go-left[&mob, 7];\n    go_down{&mob, 5};\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n    mob:go-left[7];\n    mob;godown{5};\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 33.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on grass!"
                ]
            ],
            "text_C": [
                [
                    "Level 33.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on grass!"
                ]
            ],
            "text_C++": [
                [
                    "Level 33.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on grass!"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "mob.go_direction(n)",
            "hint2_Python": "right -> up",
            "hint1_C": "go_direction(&mob, n)",
            "hint2_C": "right -> up",
            "hint1_C++": "mob.go_direction(n)",
            "hint2_C++": "right -> up",
            "pages": 1,
            "blocks": [
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "oak_trapdoor.png"
                ],
                [
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "diamond_ore.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "oak_log_top.png",
                    "oak_log_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "diamond_ore.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "cobblestone.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "cobblestone.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level34": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)\nmob.goright(6)\nmob:go_up(3)\nmob.go_left(2)\nmob.go_up(3)\nmob.go-lef(4)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n    goright(&mob, 6);\n    go_up(&mob, 3);\n    go_left(&mob, 2);\n    go_up(&mob, 3);\n    go-lef(&mob, 4);\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n    mob.goright(6);\n    mob:go_up(3);\n    mob.go_left(2);\n    mob.go_up(3);\n    mob.go-lef(4);\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 34.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on grass!"
                ]
            ],
            "text_C": [
                [
                    "Level 34.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on grass!"
                ]
            ],
            "text_C++": [
                [
                    "Level 34.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on grass!"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "mob.go_direction(n)",
            "hint2_Python": "right -> up",
            "hint1_C": "go_direction(&mob, n)",
            "hint2_C": "right -> up",
            "hint1_C++": "mob.go_direction(n)",
            "hint2_C++": "right -> up",
            "pages": 1,
            "blocks": [
                [
                    "oak_trapdoor.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "cobblestone.png",
                    "cobblestone.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "sand.png",
                    "sand.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "sandstone_top.png",
                    "sand.png"
                ],
                [
                    "oak_log_top.png",
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "sandstone_top.png",
                    "sandstone_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "farmland_moist.png",
                    "farmland_moist.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ],
                [
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "dirt.png",
                    "grass_top.png"
                ],
                [
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png",
                    "grass_top.png"
                ]
            ]
        }
    ],
    "level35": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)\nn = 4\nfor i in range[2]:\n    mob.go_up(n)\n    mob.go_right(n)",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n    int n = 4;\n    for (int i = 1; i < 2; i++) {\n        go_up(&mob, n);\n        go_right(&mob, n);\n    }\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n    int n = 4;\n    for (int i = 1; i < 2; i++) {\n        mob.go_up(n);\n        mob.go_right(n);\n    }\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 35.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on bedrock!"
                ]
            ],
            "text_C": [
                [
                    "Level 35.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on bedrock!"
                ]
            ],
            "text_C++": [
                [
                    "Level 35.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on bedrock!"
                ]
            ],
            "hint1_unlocked": false,
            "hint2_unlocked": false,
            "hint1_Python": "n is too big",
            "hint2_Python": "() instead of []",
            "hint1_C": "n is too big",
            "hint2_C": "i is too big",
            "hint1_C++": "n is too big",
            "hint2_C++": "i is too big",
            "pages": 1,
            "blocks": [
                [
                    "soul_sand.png",
                    "soul_sand.png",
                    "soul_sand.png",
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "oak_trapdoor.png"
                ],
                [
                    "soul_sand.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "bedrock.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png"
                ],
                [
                    "soul_sand.png",
                    "soul_soil.png",
                    "netherrack.png",
                    "bedrock.png",
                    "netherrack.png",
                    "nether_quartz.png",
                    "nether_quartz.png"
                ],
                [
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "bedrock.png",
                    "netherrack.png",
                    "nether_quartz.png",
                    "nether_quartz.png"
                ],
                [
                    "bedrock.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "netherrack.png",
                    "soul_soil.png"
                ],
                [
                    "bedrock.png",
                    "netherrack.png",
                    "nether_gold_ore.png",
                    "nether_gold_ore.png",
                    "nether_gold_ore.png",
                    "netherrack.png",
                    "soul_soil.png"
                ],
                [
                    "bedrock.png",
                    "netherrack.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "soul_soil.png",
                    "soul_sand.png"
                ]
            ]
        }
    ],
    "level36": [
        {
            "steve_xy": [
                0,
                0
            ],
            "input_text_Python": "class Mob:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def go_up(self, n):\n        self.y += n\n    def go_down(self, n):\n        self.y -= n\n    def go_right(self, n):\n        self.x += n\n    def go_left(self, n):\n        self.x -= n\n\nmob = Mob(0, 0)\ni = 0\nwhile i < 6:\n    mob.go_up(2)\n    mob.go_right(2)\n",
            "input_text_C": "#include <stdio.h>\nstruct Mob {\n    int x;\n    int y;\n};\nvoid go_up(struct Mob *mob, int n) {\n    mob->y += n;\n}\nvoid go_down(struct Mob *mob, int n) {\n    mob->y -= n;\n}\nvoid go_right(struct Mob *mob, int n) {\n    mob->x += n;\n}\nvoid go_left(struct Mob *mob, int n) {\n    mob->x -= n;\n}\nint main() {\n    struct Mob mob = {0, 0};\n    int i = 0;\n    while (i < 6) {\n        go_up(&mob, 2);\n        go_right(&mob, 2);\n    }\n    return 0;\n}",
            "input_text_C++": "#include <iostream>\n#include <string>\nusing namespace std;\nclass Mob {\n    public:\n        int x;\n        int y;\n        Mob(int a, int b) {\n            x = a;\n            y = b;\n        }\n        void go_up(int n) {\n            y += n;\n        }\n        void go_down(int n) {\n            y -= n;\n        }\n        void go_right(int n) {\n            x += n;\n        }\n        void go_left(int n) {\n            x -= n;\n        }\n};\nint main() {\n    Mob mob(0, 0);\n    int i = 0;\n    while (i < 6) {\n        mob.go_up(2);\n        mob.go_right(2);\n    }\n    return 0;\n}",
            "text_Python": [
                [
                    "Level 36.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on purpur blocks!"
                ]
            ],
            "text_C": [
                [
                    "Level 35.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on purpur blocks!"
                ]
            ],
            "text_C++": [
                [
                    "Level 35.",
                    "",
                    "This code should make Mob go to",
                    "trapdoor but there are some errors",
                    "that prevent it from doing that",
                    "",
                    "Mob can only go on purpur blocks!"
                ]
            ],
            "hint1_unlocked": true,
            "hint2_unlocked": true,
            "hint1_Python": "i is never updated",
            "hint2_Python": "Parameters in functions are too big",
            "hint1_C": "i is never updated",
            "hint2_C": "Parameters in functions are too big",
            "hint1_C++": "i is never updated",
            "hint2_C++": "Parameters in functions are too big",
            "pages": 1,
            "blocks": [
                [
                    "end_stone.png",
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "oak_trapdoor.png"
                ],
                [
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png"
                ],
                [
                    "chorus_plant.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png"
                ],
                [
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone_bricks.png"
                ],
                [
                    "end_stone_bricks.png",
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png"
                ],
                [
                    "purpur_block.png",
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png",
                    "chorus_plant.png"
                ],
                [
                    "purpur_block.png",
                    "end_stone_bricks.png",
                    "end_stone.png",
                    "end_stone_bricks.png",
                    "chorus_plant.png",
                    "chorus_plant.png",
                    "end_stone_bricks.png"
                ]
            ]
        }
    ]
}